name: Deploy to PROD-GLA
on:
  push:
    branches:
      - prod
jobs:
  build:
    name: Generate Build and Deploy to DEV
    # environment: PROD
    runs-on: ubuntu-latest
    steps:
      - name: Checkout code
        uses: actions/checkout@v3

      - name: Setup Node Env
        uses: actions/setup-node@v3
        with:
          node-version: 21.1.0
      - name: Copy .env file
        env:
          ENV_FILE_CONTENT_NEW: ${{ secrets.ENV_PROD }}
        run: echo "$ENV_FILE_CONTENT_NEW" > .env

      - name: Generate React Build
        run: |
          yarn install
          yarn build

      - name: Show PWD
        run: |
          echo "Current Working Directory:" 
          pwd

      - name: Create Directory
        run: mkdir my_directory

      - name: List Contents
        run: |
          echo "Contents of the current directory (in reverse order):"
           ls -lr

      - name: Deploy to Server 1
        uses: easingthemes/ssh-deploy@main
        env:
          SSH_PRIVATE_KEY: ${{ secrets.EC2_SSH_KEY_GLA_PROD }}
          REMOTE_HOST: ${{ secrets.HOST_DNS_GLA_PROD }}
          REMOTE_USER: ${{ secrets.USERNAME_GLA_PROD }}

      - name: Set up SSH key
        run: |
          mkdir -p ~/.ssh
          echo "${{ secrets.EC2_SSH_KEY_GLA_PROD }}" > ~/.ssh/id_rsa
          chmod 600 ~/.ssh/id_rsa
          # Add the SSH key to the known_hosts file (replace hostname with your actual hostname)
          ssh-keyscan -H ${{ secrets.HOST_DNS_GLA_PROD }} >> ~/.ssh/known_hosts

      - name: Deploy with rsync
        run: |
          rsync -avz -e "ssh -i ~/.ssh/id_rsa" ./dist/ ${{ secrets.USERNAME_GLA_PROD }}@${{ secrets.HOST_DNS_GLA_PROD }}:/var/www/palooza.uniteframework.io/public

      - name: Copy to server dist folder
        run: |
          sshpass -p '${{ secrets.EC2_SSH_KEY_GLA_PROD  }}' ssh -v -o StrictHostKeyChecking=no ${{ secrets.USERNAME_GLA_PROD  }}@${{ secrets.HOST_DNS_GLA_PROD  }} <<'ENDSSH'
          cd /home/prasad/gla-player-dist/
          ./deploy.sh
          ENDSSH
