import {
  ChevronDownIcon,
  ChevronLeftIcon,
  ChevronRightIcon,
  ChevronUpIcon,
  SearchIcon,
} from "@chakra-ui/icons";
import { Button, Icon, Text } from "@chakra-ui/react";

interface IconProps {
  name: string;
  color?: string;
  [key: string]: any;
}

const iconsMap: Record<string, React.FC<IconProps>> = {
  QuestionIcon: ({ color, ...props }) => {
    return (
      <Icon viewBox="0 0 17 20" {...props}>
        <path
          d="M9 20L8.75 17H8.5C6.13333 17 4.125 16.175 2.475 14.525C0.825 12.875 0 10.8667 0 8.5C0 6.13333 0.825 4.125 2.475 2.475C4.125 0.825 6.13333 0 8.5 0C9.68333 0 10.7875 0.220833 11.8125 0.6625C12.8375 1.10417 13.7375 1.7125 14.5125 2.4875C15.2875 3.2625 15.8958 4.1625 16.3375 5.1875C16.7792 6.2125 17 7.31667 17 8.5C17 9.75 16.7958 10.95 16.3875 12.1C15.9792 13.25 15.4208 14.3167 14.7125 15.3C14.0042 16.2833 13.1625 17.175 12.1875 17.975C11.2125 18.775 10.15 19.45 9 20ZM11 16.35C12.1833 15.35 13.1458 14.1792 13.8875 12.8375C14.6292 11.4958 15 10.05 15 8.5C15 6.68333 14.3708 5.14583 13.1125 3.8875C11.8542 2.62917 10.3167 2 8.5 2C6.68333 2 5.14583 2.62917 3.8875 3.8875C2.62917 5.14583 2 6.68333 2 8.5C2 10.3167 2.62917 11.8542 3.8875 13.1125C5.14583 14.3708 6.68333 15 8.5 15H11V16.35ZM8.475 13.975C8.75833 13.975 9 13.875 9.2 13.675C9.4 13.475 9.5 13.2333 9.5 12.95C9.5 12.6667 9.4 12.425 9.2 12.225C9 12.025 8.75833 11.925 8.475 11.925C8.19167 11.925 7.95 12.025 7.75 12.225C7.55 12.425 7.45 12.6667 7.45 12.95C7.45 13.2333 7.55 13.475 7.75 13.675C7.95 13.875 8.19167 13.975 8.475 13.975ZM7.75 10.8H9.25C9.25 10.3 9.3 9.95 9.4 9.75C9.5 9.55 9.81667 9.18333 10.35 8.65C10.65 8.35 10.9 8.025 11.1 7.675C11.3 7.325 11.4 6.95 11.4 6.55C11.4 5.7 11.1125 5.0625 10.5375 4.6375C9.9625 4.2125 9.28333 4 8.5 4C7.76667 4 7.15 4.20417 6.65 4.6125C6.15 5.02083 5.8 5.51667 5.6 6.1L7 6.65C7.08333 6.36667 7.24167 6.0875 7.475 5.8125C7.70833 5.5375 8.05 5.4 8.5 5.4C8.95 5.4 9.2875 5.525 9.5125 5.775C9.7375 6.025 9.85 6.3 9.85 6.6C9.85 6.88333 9.76667 7.1375 9.6 7.3625C9.43333 7.5875 9.23333 7.81667 9 8.05C8.41667 8.55 8.0625 8.94583 7.9375 9.2375C7.8125 9.52917 7.75 10.05 7.75 10.8Z"
          fill="currentColor"
        />
      </Icon>
    );
  },

  HomeIcon: ({ color, ...props }) => {
    return (
      <Icon viewBox="0 0 16 18" {...props}>
        <path
          d="M2 16H5V10H11V16H14V7L8 2.5L2 7V16ZM0 18V6L8 0L16 6V18H9V12H7V18H0Z"
          fill="currentColor"
        />
      </Icon>
    );
  },
  LeaderboardIcon: ({ color, ...props }) => {
    return (
      <Icon viewBox="0 0 20 18" {...props}>
        <path
          d="M2 16H6V8H2V16ZM8 16H12V2H8V16ZM14 16H18V10H14V16ZM0 18V6H6V0H14V8H20V18H0Z"
          fill="currentColor"
        />
      </Icon>
    );
  },
  WatchIcon: ({ color, ...props }) => {
    return (
      <Icon viewBox="0 0 20 16" color={color} {...props}>
        <path
          d="M2 0L4 4H7L5 0H7L9 4H12L10 0H12L14 4H17L15 0H18C18.55 0 19.0208 0.195833 19.4125 0.5875C19.8042 0.979167 20 1.45 20 2V14C20 14.55 19.8042 15.0208 19.4125 15.4125C19.0208 15.8042 18.55 16 18 16H2C1.45 16 0.979167 15.8042 0.5875 15.4125C0.195833 15.0208 0 14.55 0 14V2C0 1.45 0.195833 0.979167 0.5875 0.5875C0.979167 0.195833 1.45 0 2 0ZM2 6V14H18V6H2Z"
          fill="currentColor"
        />
      </Icon>
    );
  },
  ProfileIcon: ({ color, ...props }) => {
    return (
      <Icon viewBox="0 0 24 24" color={color} {...props}>
        <path
          d="M12 12c2.206 0 4-1.794 4-4s-1.794-4-4-4-4 1.794-4 4 1.794 4 4 4zm0 2c-2.67 0-8 1.336-8 4v2h16v-2c0-2.664-5.33-4-8-4z"
          fill="currentColor"
        />
      </Icon>
    );
  },
  LogoutIcon: ({ color, ...props }) => {
    return (
      <Icon
        viewBox="0 0 21 20"
        color={color}
        {...props}
      >
        <path d="M10.6 20C9.2167 20 7.9167 19.7375 6.70004 19.2125C5.48337 18.6875 4.42504 17.975 3.52504 17.075C2.62504 16.175 1.91254 15.1167 1.38754 13.9C0.862537 12.6833 0.600037 11.3833 0.600037 10C0.600037 8.6 0.862537 7.29583 1.38754 6.0875C1.91254 4.87917 2.62504 3.825 3.52504 2.925L4.92504 4.325C4.1917 5.05833 3.62087 5.90833 3.21254 6.875C2.8042 7.84167 2.60004 8.88333 2.60004 10C2.60004 12.2333 3.37504 14.125 4.92504 15.675C6.47504 17.225 8.3667 18 10.6 18C12.8334 18 14.725 17.225 16.275 15.675C17.825 14.125 18.6 12.2333 18.6 10C18.6 8.88333 18.3959 7.84167 17.9875 6.875C17.5792 5.90833 17.0084 5.05833 16.275 4.325L17.675 2.925C18.575 3.825 19.2875 4.87917 19.8125 6.0875C20.3375 7.29583 20.6 8.6 20.6 10C20.6 11.3833 20.3375 12.6833 19.8125 13.9C19.2875 15.1167 18.575 16.175 17.675 17.075C16.775 17.975 15.7167 18.6875 14.5 19.2125C13.2834 19.7375 11.9834 20 10.6 20ZM9.60004 11V0H11.6V11H9.60004Z"
         fill="currentColor"
          />
      </Icon>
    );
  },
  ThumbsUpIcon: ({ color, ...props }) => {
    return (
      <Icon viewBox="-4 -4 28 28" fill="currentColor" color={color} {...props}>
        <path d="M15 17.4999H5.83329V6.66658L11.6666 0.833252L12.7083 1.87492C12.8055 1.97214 12.8854 2.10409 12.9479 2.27075C13.0104 2.43742 13.0416 2.59714 13.0416 2.74992V3.04159L12.125 6.66658H17.5C17.9444 6.66658 18.3333 6.83325 18.6666 7.16658C19 7.49992 19.1666 7.88881 19.1666 8.33325V9.99992C19.1666 10.0971 19.1527 10.2013 19.125 10.3124C19.0972 10.4235 19.0694 10.5277 19.0416 10.6249L16.5416 16.4999C16.4166 16.7777 16.2083 17.0138 15.9166 17.2083C15.625 17.4027 15.3194 17.4999 15 17.4999ZM7.49996 15.8333H15L17.5 9.99992V8.33325H9.99996L11.125 3.74992L7.49996 7.37492V15.8333ZM5.83329 6.66658V8.33325H3.33329V15.8333H5.83329V17.4999H1.66663V6.66658H5.83329Z" />
      </Icon>
    );
  },
  TakeAQuizIcon: ({ ...props }) => {
    return (
      <Text fontSize="1em" {...props}>
       Take a Quiz
      </Text>
    );
  },
   BackIcon : ({ color, width = "32px", height = "32px", ...props }) => {
    return (
      <Icon
        viewBox="0 0 32 32"
        fill="currentColor"
        color={color}
        width={width}
        height={height}
        {...props}
      >
        <path d="M12.5208 16.8333L17.1875 21.4999L16 22.6666L9.33334 15.9999L16 9.33325L17.1875 10.4999L12.5208 15.1666H22.6667V16.8333H12.5208Z" />
      </Icon>
    );
  },
  
  ChevronRightIcon,
  ChevronLeftIcon,
  ChevronDownIcon,
  ChevronUpIcon,
  SearchIcon,
};

const IconByName: React.FC<IconProps> = ({
  name,
  color,
  onClick,
  ...props
}) => {
  const Component = iconsMap[name];
  if (onClick) {
    return (
      <Button
        variant="link"
        _hover={{ borderColor: "transparent" }}
        _focus={{ outline: "none" }}
        onClick={onClick}
        {...props}
      >
        {Component ? <Component name={name} color={color} /> : null}
      </Button>
    );
  }
  return Component ? <Component name={name} color={color} {...props} /> : null;
};

export default IconByName;
